#logging:
#    level:
#       ROOT: DEBUG
   
##############################################################################################
# MFAAS configuration section
##############################################################################################
mfaas:
    discovery:
        serviceId: imsivt
        locations: http://eureka:password@localhost:10011/eureka/
        enabled: true
        endpoints:
            statusPage: ${mfaas.server.scheme}://${mfaas.service.hostname}:${mfaas.server.port}${mfaas.server.contextPath}/application/info
            healthPage: ${mfaas.server.scheme}://${mfaas.service.hostname}:${mfaas.server.port}${mfaas.server.contextPath}/application/health
            homePage: ${mfaas.server.scheme}://${mfaas.service.hostname}:${mfaas.server.port}${mfaas.server.contextPath}/api/v1?lastname=last1
        info:
            serviceTitle:  imsivt
            description:  IMS IVTNO/IVTCM transaction interaction 
            enableApiDoc: true
            swaggerLocation: swagger/imsivt_swagger.json
        fetchRegistry: false
        region: default
    service:
        hostname: localhost
        ipAddress: 127.0.0.1
    catalog-ui-tile:
        id: imsivt
        title: IMS IVTNO/IVTCM API
        description: API to interact with IMS transaction IVTNO/IVTCM and therefore access IVPDB2 database
        version:  1.0.0
    server:
        scheme: https
        port: 60059
        contextPath: /imsivt
    security:
        sslEnabled: true
        protocol: TLSv1.2
        ciphers: TLS_RSA_WITH_AES_128_CBC_SHA,TLS_DHE_RSA_WITH_AES_256_CBC_SHA,TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_EMPTY_RENEGOTIATION_INFO_SCSV
        keyAlias: localhost
        keyPassword: password
        keyStore: security/localhost.keystore.p12
        keyStoreType: PKCS12
        keyStorePassword: password
        trustStore: security/localhost.truststore.p12
        trustStoreType: PKCS12
        trustStorePassword: password

eureka:
    instance:
        appname: ${mfaas.discovery.serviceId}
        hostname: ${mfaas.service.hostname}
        statusPageUrlPath: ${mfaas.discovery.endpoints.statusPage}
        healthCheckUrl: ${mfaas.discovery.endpoints.healthPage}
        homePageUrl: ${mfaas.discovery.endpoints.homePage}
        nonSecurePort: ${mfaas.server.port}
        securePort: ${mfaas.server.port}
        securePortEnabled: ${mfaas.security.sslEnabled}
        nonSecurePortEnabled: false
        metadata-map:
            routed-services:
                api_v1:
                    gateway-url: "api/v1"
                    service-url: ${mfaas.server.contextPath}/api/v1
                api-doc:
                    gateway-url: "api/v1/api-doc"
                    service-url: ${mfaas.server.contextPath}/api-doc
              #apiml:
              #    apiInfo:
              #        - apiId: ${mfaas.discovery.serviceId}
              #          gatewayUrl: api/v1
              #          swaggerUrl: ${mfaas.server.scheme}://${mfaas.service.hostname}:${mfaas.server.port}${mfaas.server.contextPath}/api-doc
              #          documentationUrl: https://www.zowe.org
            mfaas:
                api-info:
                    apiVersionProperties:
                        v1:
                            title: IMS IVTNO/IVTCM API
                            description: API to interact with IMS transaction IVTNO/IVTCM and therefore access IVPDB2 database
                            version: 1.0.0
                            basePackage: com.ca.mfaas.tmimsivtzoweapi.api.v1
                            # apiPattern: /v1/.*  # alternative to basePackage for exposing endpoints which match the regex pattern to swagger JSON
                discovery:
                    catalogUiTile:
                        id: ${mfaas.catalog-ui-tile.id}
                        title:  ${mfaas.catalog-ui-tile.title}
                        description: ${mfaas.catalog-ui-tile.description}
                        version: ${mfaas.catalog-ui-tile.version}
                    enableApiDoc: ${mfaas.discovery.info.enableApiDoc:true}
                    service:
                        title: ${mfaas.discovery.info.serviceTitle}
                        description: ${mfaas.discovery.info.description}
    client:
        enabled: ${mfaas.discovery.enabled}
        healthcheck:
            enabled: false
        serviceUrl:
            defaultZone: ${mfaas.discovery.locations}
        fetchRegistry:  ${mfaas.discovery.fetchRegistry}
        region: ${mfaas.discovery.region}     


      
 ##############################################################################################
 # Application configuration section
 ##############################################################################################
server:
      port: ${mfaas.server.port}
      servlet:
          contextPath: ${mfaas.server.contextPath}
      ssl:
          enabled: ${mfaas.security.sslEnabled}
          protocol: ${mfaas.security.protocol}
          ciphers: ${mfaas.security.ciphers}
          keyStore: ${mfaas.security.keyStore}
          keyAlias: ${mfaas.security.keyAlias}
          keyPassword: ${mfaas.security.keyPassword}
          keyStorePassword: ${mfaas.security.keyStorePassword}
          keyStoreType: ${mfaas.security.keyStoreType}
          trustStore: ${mfaas.security.trustStore}
          trustStoreType: ${mfaas.security.trustStoreType}
          trustStorePassword: ${mfaas.security.trustStorePassword}

spring:
    application:
          name: ${mfaas.discovery.serviceId} 
    mvc:
        throw-exception-if-no-handler-found: true
    profiles:
        active: "prod"
  
---

spring:
  profiles: dev
mfaas:
    service:
        hostname: localhost
        ipAddress: 127.0.0.1
    server:
        port: 8082
    discovery:
        enabled: false
        locations: http://eureka:password@localhost:10011/eureka/
    security:
        sslEnabled: false

---

spring:
  profiles: prod
mfaas:
    service:
        hostname: localhost
        ipAddress: 127.0.0.1
    server:
        port: 60059
    discovery:
        enabled: true
        locations: http://eureka:password@localhost:10011/eureka/
    security:
        sslEnabled: true

